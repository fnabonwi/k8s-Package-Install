Ways to install k8s
Kubeadm
Minikube
Kops
K8s in gcp


Step1:
On Master & worker node
sudo su
apt-get update  
apt-get install docker.io -y
service docker restart  
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -  
echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" >/etc/apt/sources.list.d/kubernetes.list
apt-get update
apt install kubeadm=1.20.0-00 kubectl=1.20.0-00 kubelet=1.20.0-00 -y  

Step2:
On Master:
   kubeadm init --pod-network-cidr=192.168.0.0/16
   >Copy the token and paste it into the worker node.
Step3:
On Master: 
  exit
    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config


   
step4:
On Master:
kubectl apply -f[ https://docs.projectcalico.org/manifests/calico.yaml](https://docs.projectcalico.org/manifests/calico.yaml)
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.49.0/deploy/static/provider/baremetal/deploy.yaml



Stage A: Creating a New Token
Using the kubeadm command, list your current tokens on the Master node. If your cluster was initialized over 24-hour ago, the list will likely be empty, since a token’s lifespan is only 24-hours.
kubeadm tokens list

Create a new token using kubeadm. By using the –print-join-command argument kubeadm will output the token and SHA hash required to securely communicate with the master.
kubeadm token create --print-join-command

Use kubeadm to list all tokens in order to verify our new one.
kubeadm tokens list

Joining the New Worker to the Cluster
With our new token in hand it is time to join our worker to the cluster.

Using SSH, log onto the new worker node.
Use the kubeadm join command with our new token to join the node to our cluster.
kubeadm join 192.168.1.130:6443 --token qt57zu.wuvqh64un13trr7x --discovery-token-ca-cert-hash sha256:5ad014cad868fdfe9388d5b33796cf40fc1e8c2b3dccaebff0b066a0532e8723

List your cluster’s nodes to verify your new worker has successfully joined the cluster.
kubectl get nodes

Verify that the worker’s status to ensure no problems were encountered.
kubectl get nodes my-worker-name
